include ../text/text.pug
include ../dropdown-block/dropdown-block.pug

mixin count-picker(props)
  -
    var {
      inputText = '',
      items = [],
      label = '',
      type = undefined,
      withControlButtons = false,
    } = props || {};

  .count-picker.js-count-picker(
    data-type = type
  )
    +dropdown-block({
      inputText,
      label,
      isContentAreExtension: true,
    })
    .count-picker__content
      ul.count-picker__list
        each item in items
          li.count-picker__item.js-count-picker__item
            .count-picker__item-label.js-count-picker__item-label
              +text({
                tag: 'h3',
                text: item.label,
              })
            button.count-picker__button(
              class = 'js-count-picker__button_type_minus'
              type = 'button'
            ) -
            .count-picker__item-value-container
              +text({
                classes: ['js-count-picker__item-value'],
                tag: 'h3',
                text: item.count.toString(),
              })
            button.count-picker__button(
              class = 'js-count-picker__button_type_plus'
              type = 'button'
            ) +
      if withControlButtons
        .count-picker__control-buttons
          button.count-picker__control-button(
            class = 'js-count-picker__clear-button'
            type = 'button'
          ) Очистить
          button.count-picker__control-button(
            class = 'js-count-picker__apply-button'
            type = 'button'
          ) Применить
