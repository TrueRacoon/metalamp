extends ../../layouts/ui-kit/ui-kit.pug
include ../../components/date-filter/date-filter.pug
include ../../components/count-picker/count-picker.pug
include ../../components/checkbox-buttons/checkbox-buttons.pug
include ../../components/radio-buttons/radio-buttons.pug
include ../../components/toggle-switch/toggle-switch.pug
include ../../components/like-button/like-button.pug
include ../../components/rate-buttons/rate-buttons.pug
include ../../components/range-slider/range-slider.pug
include ../../components/pagination/pagination.pug
include ../../components/expandable-checkbox-list/expandable-checkbox-list.pug
include ../../components/features/features.pug
include ../../components/review/review.pug
include ../../components/toggle-switch/toggle-switch.pug
include ../../components/bullet-list/bullet-list.pug

block variables
  -
    var title = 'Form Elements';
    var description = 'Form Elements Description';
    var keywords = 'Form Elements Keywords';

    var initialGuestPickerItems = [
      { label: 'Взрослые', count: 0 },
      { label: 'Дети', count: 0 },
      { label: 'Младенцы', count: 0 }
    ];

    var guestPickerItems = [
      { label: 'Взрослые', count: 2 },
      { label: 'Дети', count: 1 },
      { label: 'Младенцы', count: 0 }
    ];

    var facilitiesPickerItems = [
      { label: 'Спальни', count: 2 },
      { label: 'Кровати', count: 2 },
      { label: 'Ванные комнаты', count: 0 },
    ];

    var expandableCheckboxItems = [
      { value: 'Завтрак' },
      { value: 'Письменный стол', checked: true },
      { value: 'Стул для кормления', checked: true },
      { value: 'Кроватка', checked: true },
      { value: 'Телевизор' },
      { value: 'Шампунь' },
      { value: 'Телевизор' },
      { value: 'Шампунь' },
    ];

    var richCheckboxItems = [
      {
        title: 'Широкий коридор',
        description: 'Ширина коридоров в номере не\xA0менее 91 см.',
      },
      {
        title: 'Помощник для инвалидов',
        description: 'На 1 этаже вас встретит специалист и\xA0проводит до номера.',
      },
    ];

    var features = [
      {
        icon: 'insert-emoticon',
        title: 'Комфорт',
        description: 'Шумопоглощающие стены',
      },
      {
        icon: 'location-city',
        title: 'Удобство',
        description: 'Окно в каждой из спален',
      },
    ];

    var paginationProps = {
      currentPage: 1,
      nPages: 15,
      nRoomsPerPage: 12,
      nRoomsPlus: 100,
    };

    var checkboxButtonsData = [
      { value: 'Можно курить' },
      { value: 'Можно с питомцами', checked: true },
      { value: 'Можно пригласить гостей (до\xA010\xA0человек)', checked: true }
    ];

    var rangeSliderData = {
      initialLowerValue: 5000,
      initialUpperValue: 10000,
      maxValue: 15100,
      minValue: 100,
      label: 'Range slider',
      step: 100,
    };

    var bulletListData = [
      'Нельзя с питомцами',
      'Без вечеринок и мероприятий',
      'Время прибытия — после 13:00, а\xa0выезд до 12:00',
    ];

    var reviewData = {
      date: '5 дней назад',
      likePressed: true,
      nLikes: 12,
      text: 'Великолепный матрас на кровати в основной спальне! А пуфик вообще потрясающий. И стены, действительно, шумоподавляющие. Выкрикивал комплименты повару — никто не жаловался из соседей.',
      userId: 1,
      username: 'Мурад Сарафанов',
    };

block content
  .elements.js-elements
    .elements__block(
      class = 'elements__block_column_first'
      class = 'elements__block_row_first'
    )
      .elements__element
        .elements__label-block
          +text({
            tag: 'h3',
            text: 'Text field',
          })
          .elements__label Default
        +input({
          placeholder: 'Email',
        })
      .elements__element
        .elements__label-block
          +text({
            tag: 'h3',
            text: 'Text field',
          })
          .elements__label Hover / focus
        +input({
          placeholder: 'This is pretty awesome',
        })
      .elements__element
        +count-picker({
          inputText: 'Сколько гостей',
          items: initialGuestPickerItems,
          label: 'dropdown',
          type: 'guests',
          withControlButtons: true,
        })
      .elements__element(
        class = 'elements__element_bottom-margin_bigger'
      )
        .elements__label-block
          +text({
            tag: 'h3',
            text: 'Masked text field',
          })
        +input({
          placeholder: 'ДД.ММ.ГГГГ',
        })
      .elements__element(
        class = 'elements__element_bottom-margin_bigger'
      )
        +date-filter({
          arrivalLabel: 'Date dropdown',
          departureLabel: 'Date dropdown',
          initialDepartureDate: '19.08.2019',
        })
      .elements__block(
        class = 'elements__block_narrow'
      )
        .elements__element(
          class = 'elements__element_bottom-margin_bigger'
        )
          +date-filter({
            dateFilterLabel: 'Filter date dropdown',
            initialArrivalDate: '19.08.2019',
            initialDepartureDate: '23.08.2019',
            isSingleDateInput: true,
          })
        .elements__element
          .elements__label-block
            +text({
              tag: 'h3',
              text: 'Subscription text field',
            })
          +input({
            name: 'email',
            placeholder: 'Email',
            type: 'email',
            withSubmitButton: true,
          })
    .elements__block(
      class = 'elements__block_column_second'
    )
      .elements__element(
        class = 'elements__element_bottom-margin_bigger'
      )
        .elements__label-block(
          class = 'elements__label-block_bottom-margin_bigger'
        )
          +text({
            tag: 'h3',
            text: 'Checkbox buttons',
          })
        +checkbox-buttons({
          items: checkboxButtonsData,
          name: 'roomRules'
        })
      .elements__element(
        class = 'elements__element_bottom-margin_bigger'
      )
        .elements__label-block(
          class = 'elements__label-block_bottom-margin_bigger'
        )
          +text({
            tag: 'h3',
            text: 'Radio buttons',
          })
        +radio-buttons({
          name: 'gender',
          radioButtons: [
            { value: 'Мужчина', checked: true },
            { value: 'Женщина' },
          ],
        })
      .elements__element(
        class = 'elements__element_bottom-margin_bigger'
      )
        .elements__label-block(
          class = 'elements__label-block_bottom-margin_bigger'
        )
          +text({
            tag: 'h3',
            text: 'Toggle',
          })
        .elements__element-container(
          class = 'elements__toggle-switches-container'
        )
          +toggle-switch({
            checked: true,
            name: 'subscribe1',
            value: 'Получать спецпредложения',
          })
          +toggle-switch({
            name: 'subscribe2',
            value: 'Получать спецпредложения',
          })
      .elements__element(
        class = 'elements__element_bottom-margin_bigger'
      )
        .elements__label-block(
          class = 'elements__label-block_bottom-margin_bigger'
        )
          +text({
            tag: 'h3',
            text: 'Like button',
          })
        .elements__element-container(
          class = 'elements__like-buttons-container'
        )
          +like-button({
            nLikes: 2,
          })
          +like-button({
            nLikes: 12,
            pressed: true,
          })
      .elements__element
        .elements__label-block(
          class = 'elements__label-block_bottom-margin_bigger'
        )
          +text({
            tag: 'h3',
            text: 'Rate button',
          })
        .elements__element-container(
          class = 'elements__rate-buttons-container'
        )
          +rate-buttons({
            nFilled: 4,
          })
          +rate-buttons({
            nFilled: 5,
          })
    .elements__block
      .elements__block(
        class = 'elements__block_narrow'
      )
        .elements__element(
          class = 'elements__element_bottom-margin_bigger'
        )
          +range-slider(rangeSliderData)
      .elements__element(
        class = 'elements__element_bottom-margin_bigger'
      )
        .elements__label-block(
          class = 'elements__label-block_bottom-margin_bigger'
        )
          +text({
            tag: 'h3',
            text: 'Buttons',
          })
        button.elements__button(
          class = 'elements__button_size_fixed'
        ) Click me
        button.elements__button(
          class = 'elements__button_size_fixed'
        ) Click me
        button.elements__button(
          class = 'elements__button_outlined'
          class = 'elements__button_size_fixed'
        ) Click me
        button.elements__button(
          class = 'elements__button_outlined'
          class = 'elements__button_size_fixed'
        ) Click me
        .elements__text-buttons
          button.elements__button(
            class = 'elements__button_text'
          ) Click me
          button.elements__button(
            class = 'elements__button_text'
          ) Click me
        button.elements__button(
          class = 'elements__button_submit'
        ) Перейти к оплате
      .elements__element
        .elements__label-block(
          class = 'elements__label-block_bottom-margin_bigger'
        )
          +text({
            tag: 'h3',
            text: 'Pagination'
          })
        +pagination(paginationProps)
    .elements__block(
      class = 'elements__block_column_first'
      class = 'elements__block_row_second'
    )
      .elements__block(
        class = 'elements__block_narrow'
      )
        .elements__element
          .elements__label-block
            +text({
              tag: 'h3',
              text: 'Dropdown'
            })
            .elements__label Default
          +count-picker({
            inputText: 'Выбор удобств',
            items: facilitiesPickerItems,
            type: 'facilities',
          })
        .elements__element
          .elements__label-block
            +text({
              tag: 'h3',
              text: 'Dropdown',
            })
            .elements__label Expanded
          +count-picker({
            inputText: 'Выбор удобств',
            items: facilitiesPickerItems,
            type: 'facilities',
          })
    .elements__block(
      class = 'elements__block_column_second'
    )
      .elements__element
        +count-picker({
          inputText: 'Сколько гостей',
          items: initialGuestPickerItems,
          label: 'Dropdown',
          type: 'guests',
          withControlButtons: true,
        })
    .elements__block
      .elements__element
        +count-picker({
          inputText: 'Сколько гостей',
          items: guestPickerItems,
          label: 'Dropdown',
          type: 'guests',
          withControlButtons: true,
        })
    .elements__block(
      class = 'elements__block_column_first'
      class = 'elements__block_row_third'
    )
      .elements__element
        +expandable-checkbox-list({
          items: expandableCheckboxItems,
          label: 'Expandable checkbox list',
        })
      .elements__element
        +expandable-checkbox-list({
          items: expandableCheckboxItems,
          label: 'Expandable checkbox list',
        })
    .elements__block(
      class = 'elements__block_column_second'
    )
      .elements__block(
        class = 'elements__block_narrow'
      )
        .elements__element
          +checkbox-buttons({
            items: richCheckboxItems,
            name: 'accessibility',
            isRich: true,
            label: 'Rich checkbox buttons',
          })
    .elements__block(
      class = 'elements__block_narrow'
    )
      .elements__label-block(
        class = 'elements__label-block_bottom-margin_bigger'
      )
        +text({
          tag: 'h3',
          text: 'Bullet list',
        })
      .elements__element
        +bullet-list({
          list: bulletListData,
        })
    .elements__block(
      class = 'elements__block_column_first'
    )
      .elements__element
        +features({
          features,
        })
    .elements__block(
      class = 'elements__block_wide'
    )
      .elements__element
        +review(reviewData)
